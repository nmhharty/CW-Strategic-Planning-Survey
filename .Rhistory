filter((IdeaThemes)[1] != "NA")
IdeaThemes |>
group_by((IdeaThemes)[1]) |>
#    filter((IdeaThemes)[1] != "NA") |>
count()
for (i in ThemeCols) {
IdeaThemes |>
group_by((IdeaThemes)[i]) |>
count() |>
arrange(desc(n)) |>
kable(caption = paste0(names(IdeaThemes)[i]," Themes")) |>
kable_paper(full_width = F, "hover") |>
print()
}
lapply(IdeaThemes[,c(1:7)], fct_drop, "NA")
IdeaThemes[,c(1:7)] <- lapply(IdeaThemes[,c(1:7)], fct_drop, "NA")
for (i in ThemeCols) {
IdeaThemes |>
group_by((IdeaThemes)[i]) |>
count() |>
arrange(desc(n)) |>
kable(caption = paste0(names(IdeaThemes)[i]," Themes")) |>
kable_paper(full_width = F, "hover") |>
print()
}
IdeaThemes[,c(1:7)] <- lapply(IdeaThemes[,c(1:7)], fct_drop, NA)
for (i in ThemeCols) {
IdeaThemes |>
group_by((IdeaThemes)[i]) |>
count() |>
arrange(desc(n)) |>
kable(caption = paste0(names(IdeaThemes)[i]," Themes")) |>
kable_paper(full_width = F, "hover") |>
print()
}
levels(IdeaThemes$KidsTeam)
levels(IdeaThemes$`Kids Team`)
ThemeCols = c(1:7)
for (i in ThemeCols) {
IdeaThemes |>
group_by((IdeaThemes)[i]) |>
count() |>
arrange(desc(n)) |>
kable(caption = paste0(names(IdeaThemes)[i]," Themes")) |>
kable_paper(full_width = F, "hover") |>
print()
}
IdeaThemes |>
pivot_longer(cols = 1:7, names_to = "Category", values_to = "Theme")
group_by(Theme) |>
count() |>
arrange(desc(n))
IdeaThemes |>
pivot_longer(cols = 1:7, names_to = "Category", values_to = "Theme") |>
group_by(Theme) |>
count()
IdeaThemes |>
pivot_longer(cols = 1:7, names_to = "Category", values_to = "Theme") |>
group_by(Theme) |>
count() |>
arrange(desc(n))
IdeaThemes |>
pivot_longer(cols = 1:7, names_to = "Category", values_to = "Theme") |>
filter(!is.na(Theme)) |>
group_by(Theme) |>
count() |>
arrange(desc(n)) |>
kable(caption = paste0(names(IdeaThemes)[i]," Themes")) |>
kable_paper(full_width = F, "hover")
for (i in ThemeCols) {
IdeaThemes |>
group_by((IdeaThemes)[i]) |>
count() |>
arrange(desc(n)) |>
kable(caption = paste0(names(IdeaThemes)[i]," Themes")) |>
kable_paper(full_width = F, "hover") |>
print()
}
ThemeCols = c(1:7)
for (i in ThemeCols) {
IdeaThemes |>
group_by((IdeaThemes)[i]) |>
count() |>
arrange(desc(n)) |>
kable(caption = paste0(names(IdeaThemes)[i]," Themes")) |>
kable_paper(full_width = F, "hover") |>
print()
}
# IdeaThemes |>
#   pivot_longer(cols = 1:7, names_to = "Category", values_to = "Theme") |>
#   filter(!is.na(Theme)) |>
#   group_by(Theme) |>
#   count() |>
#   arrange(desc(n)) |>
#   kable(caption = "Themes Across All Categories") |>
#   kable_paper(full_width = F, "hover")
IdeaThemes <- read_sheet("https://docs.google.com/spreadsheets/d/1-Cw424twBr0x6iOep4WLx63IHO9YosLsVDtXKtyP9xs/edit?resourcekey#gid=23067850", col_types = "c", sheet = 2)
read_sheet("https://docs.google.com/spreadsheets/d/1-Cw424twBr0x6iOep4WLx63IHO9YosLsVDtXKtyP9xs/edit?resourcekey#gid=23067850", col_types = "c", sheet = 2)
IdeaThemes <- read_sheet("https://docs.google.com/spreadsheets/d/1-Cw424twBr0x6iOep4WLx63IHO9YosLsVDtXKtyP9xs/edit?resourcekey#gid=23067850", col_types = "c", sheet = 2)
IdeaThemes[,c(1:6)] <- lapply(IdeaThemes[,c(1:6)], factor)
ThemeCols = c(1:6)
for (i in ThemeCols) {
IdeaThemes |>
group_by((IdeaThemes)[i]) |>
count() |>
arrange(desc(n)) |>
kable(caption = paste0(names(IdeaThemes)[i]," Themes")) |>
kable_paper(full_width = F, "hover") |>
print()
}
# IdeaThemes |>
#   pivot_longer(cols = 1:7, names_to = "Category", values_to = "Theme") |>
#   filter(!is.na(Theme)) |>
#   group_by(Theme) |>
#   count() |>
#   arrange(desc(n)) |>
#   kable(caption = "Themes Across All Categories") |>
#   kable_paper(full_width = F, "hover")
IdeaThemes <- read_sheet("https://docs.google.com/spreadsheets/d/1-Cw424twBr0x6iOep4WLx63IHO9YosLsVDtXKtyP9xs/edit?resourcekey#gid=23067850", col_types = "c", sheet = 2)
IdeaThemes[,c(1:6)] <- lapply(IdeaThemes[,c(1:6)], factor)
ThemeCols = c(1:6)
for (i in ThemeCols) {
IdeaThemes |>
group_by((IdeaThemes)[i]) |>
count() |>
arrange(desc(n)) |>
kable(caption = paste0(names(IdeaThemes)[i]," Themes")) |>
kable_paper(full_width = F, "hover") |>
print()
}
# IdeaThemes |>
#   pivot_longer(cols = 1:7, names_to = "Category", values_to = "Theme") |>
#   filter(!is.na(Theme)) |>
#   group_by(Theme) |>
#   count() |>
#   arrange(desc(n)) |>
#   kable(caption = "Themes Across All Categories") |>
#   kable_paper(full_width = F, "hover")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
#load packages
library(dplyr)
library(googlesheets4)
library(plotly)
library(stringr)
library(forcats)
library(tidyr)
library(kableExtra)
#load data
raw <- read_sheet("https://docs.google.com/spreadsheets/d/1-Cw424twBr0x6iOep4WLx63IHO9YosLsVDtXKtyP9xs/edit?resourcekey#gid=23067850", col_types = "c", sheet = 1) |>
mutate(ID = row_number())
ThemeCols = c(1:6)
for (i in ThemeCols) {
IdeaThemes |>
group_by((IdeaThemes)[i]) |>
count() |>
arrange(desc(n)) |>
kable(caption = paste0(names(IdeaThemes)[i]," Themes")) |>
kable_paper(full_width = F, "hover"))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
arrange(`Mean Ranking`) |>
plot_ly(x = ~Category,
y = ~`Mean Ranking`)
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
arrange(`Mean Ranking`) |>
plot_ly(x = ~Category,
y = ~`Mean Ranking`) %>%
layout(yaxis = list(autorange = "reversed"))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2), Rescaled = 7/"Mean Ranking") |>
arrange(`Mean Ranking`) |>
plot_ly(x = ~Category,
y = ~Rescaled) %>%
layout(yaxis = list(autorange = "reversed"))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2), Rescaled = (7/`Mean Ranking`) |>
arrange(`Mean Ranking`) |>
plot_ly(x = ~Category,
y = ~Rescaled) # %>%
# layout(yaxis = list(autorange = "reversed"))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2), Rescaled = (7/`Mean Ranking`) |>
arrange(`Mean Ranking`) |>
plot_ly(x = ~Category,
y = ~Rescaled) )
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`) |>
arrange(`Mean Ranking`) |>
plot_ly(x = ~Category,
y = ~Rescaled) )
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`)) |>
arrange(`Mean Ranking`) |>
plot_ly(x = ~Category,
y = ~Rescaled) )
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`)) |>
arrange(`Mean Ranking`) |>
plot_ly(x = ~Category,
y = ~Rescaled) )
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`)) |>
arrange(Rescaled) |>
plot_ly(x = ~Category,
y = ~Rescaled)
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`)) |>
arrange(Rescaled) |>
plot_ly(x = ~Category,
y = ~Rescaled) %>%
layout(list = (xaxis = (categoryorder = "mean descending")))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`)) |>
arrange(Rescaled) |>
plot_ly(x = ~Category,
y = ~Rescaled) %>%
layout(list = (xaxis = (categoryorder = "min descending")))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`)) |>
arrange(Rescaled) |>
plot_ly(x = ~Category,
y = ~Rescaled) %>%
layout(list = (yaxis = (categoryorder = "mean descending")))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`)) |>
arrange(Rescaled) |>
plot_ly(x = ~Category,
y = ~Rescaled) %>%
layout(list = (yaxis = (categoryorder = "total descending")))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`)) |>
arrange(Rescaled) |>
plot_ly(x = ~Category,
y = ~Rescaled) %>%
layout(xaxis = list(categoryorder = "total descending"))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`)) |>
plot_ly(x = ~Category,
y = ~`Mean Ranking`) %>%
layout(xaxis = list(categoryorder = "total ascending"))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2), "Min Ranking" = min(Rank, na.rm = TRUE), "Max Ranking" = max(Rank, na.rm = TRUE)) |>
arrange(`Mean Ranking`) |>
kable(caption = "Ranking of Where to Invest Resources") |>
kable_paper(full_width = F, "hover") |>
footnote("The smaller the ranking, the greater the priority. Table is ordered from highest priority to lowest priority.")
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`)) |>
plot_ly(x = ~Category,
y = ~`Mean Ranking`) %>%
layout(xaxis = list(categoryorder = "total ascending"),
yaxis = list(title = "Mean Ranking (small number = higher priority)"))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2), "Min Ranking" = min(Rank, na.rm = TRUE), "Max Ranking" = max(Rank, na.rm = TRUE)) |>
arrange(`Mean Ranking`) |>
kable(caption = "Ranking of Where to Invest Resources") |>
kable_paper(full_width = F, "hover") |>
row_sec(1:2, bold - T, background = "yellow")
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2), "Min Ranking" = min(Rank, na.rm = TRUE), "Max Ranking" = max(Rank, na.rm = TRUE)) |>
arrange(`Mean Ranking`) |>
kable(caption = "Ranking of Where to Invest Resources") |>
kable_paper(full_width = F, "hover") |>
row_spec(1:2, bold - T, background = "yellow") |>
footnote("The smaller the ranking, the greater the priority. Table is ordered from highest priority to lowest priority.")
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2), "Min Ranking" = min(Rank, na.rm = TRUE), "Max Ranking" = max(Rank, na.rm = TRUE)) |>
arrange(`Mean Ranking`) |>
kable(caption = "Ranking of Where to Invest Resources") |>
kable_paper(full_width = F, "hover") |>
row_spec(1:2, bold = T, background = "yellow") |>
footnote("The smaller the ranking, the greater the priority. Table is ordered from highest priority to lowest priority.")
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`)) |>
plot_ly(x = ~Category,
y = ~`Mean Ranking`,
marker = list(color = c("yellow", "yellow"))) %>%
layout(xaxis = list(categoryorder = "total ascending"),
yaxis = list(title = "Mean Ranking (small number = higher priority)"))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`)) |>
plot_ly(x = ~Category,
y = ~`Mean Ranking`,
marker = list(color = c("green", "green", "blue", "blue", "blue", "blue"))) %>%
layout(xaxis = list(categoryorder = "total ascending"),
yaxis = list(title = "Mean Ranking (small number = higher priority)"))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`)) |>
plot_ly(x = ~Category,
y = ~`Mean Ranking`,
marker = list(color = c("green", "green", "blue", "blue", "blue", "blue", "blue"))) %>%
layout(xaxis = list(categoryorder = "total ascending"),
yaxis = list(title = "Mean Ranking (small number = higher priority)"))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`)) |>
plot_ly(x = ~Category,
y = ~`Mean Ranking`,
marker = list(color = c("blue", "blue", "green", "blue", "blue", "blue", "green"))) %>%
layout(xaxis = list(categoryorder = "total ascending"),
yaxis = list(title = "Mean Ranking (small number = higher priority)"))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`)) |>
plot_ly(x = ~Category,
y = ~`Mean Ranking`,
marker = list(color = c("blue", "blue", "blue", "green", "blue", "blue", "green"))) %>%
layout(xaxis = list(categoryorder = "total ascending"),
yaxis = list(title = "Mean Ranking (small number = higher priority)"))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2), "Min Ranking" = min(Rank, na.rm = TRUE), "Max Ranking" = max(Rank, na.rm = TRUE)) |>
arrange(`Mean Ranking`) |>
kable(caption = "Ranking of Where to Invest Resources") |>
kable_paper(full_width = F, "hover") |>
row_spec(1:2, bold = T, background = "light yellow") |>
footnote("The smaller the ranking, the greater the priority. Table is ordered from highest priority to lowest priority.")
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2), "Min Ranking" = min(Rank, na.rm = TRUE), "Max Ranking" = max(Rank, na.rm = TRUE)) |>
arrange(`Mean Ranking`) |>
kable(caption = "Ranking of Where to Invest Resources") |>
kable_paper(full_width = F, "hover") |>
row_spec(1:2, bold = T, background = "pale yellow") |>
footnote("The smaller the ranking, the greater the priority. Table is ordered from highest priority to lowest priority.")
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2), "Min Ranking" = min(Rank, na.rm = TRUE), "Max Ranking" = max(Rank, na.rm = TRUE)) |>
arrange(`Mean Ranking`) |>
kable(caption = "Ranking of Where to Invest Resources") |>
kable_paper(full_width = F, "hover") |>
row_spec(1:2, bold = T, background = "#dbd969") |>
footnote("The smaller the ranking, the greater the priority. Table is ordered from highest priority to lowest priority.")
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`)) |>
plot_ly(x = ~Category,
y = ~`Mean Ranking`,
marker = list(color = c("blue", "blue", "blue", "#7edb69", "blue", "blue", "#7edb69"))) %>%
layout(xaxis = list(categoryorder = "total ascending"),
yaxis = list(title = "Mean Ranking (small number = higher priority)"))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2)) |>
mutate(Rescaled = (7/`Mean Ranking`)) |>
plot_ly(x = ~Category,
y = ~`Mean Ranking`,
marker = list(color = c("#3d6ddb", "#3d6ddb", "#3d6ddb", "#5bab49", "#3d6ddb", "#3d6ddb", "#5bab49"))) %>%
layout(xaxis = list(categoryorder = "total ascending"),
yaxis = list(title = "Mean Ranking (small number = higher priority)"))
raw_numeric |>
select(16,2:8) |>
pivot_longer(cols = 2:8, names_to = "Category", values_to = "Rank") |>
mutate(Category = str_sub(Category, 1,-5)) |>
group_by(Category) |>
summarise("Mean Ranking" = round(mean(Rank, na.rm = TRUE),2), "Min Ranking" = min(Rank, na.rm = TRUE), "Max Ranking" = max(Rank, na.rm = TRUE)) |>
arrange(`Mean Ranking`) |>
kable(caption = "Ranking of Where to Invest Resources") |>
kable_paper(full_width = F, "hover") |>
row_spec(1:2, bold = T, background = "#dbce3d") |>
footnote("The smaller the ranking, the greater the priority. Table is ordered from highest priority to lowest priority.")
library(quarto)
